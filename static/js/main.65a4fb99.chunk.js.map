{"version":3,"sources":["redux/reducers/dataTableReducers.ts","redux/store.ts","components/Tabs/index.tsx","components/Tab/index.tsx","redux/actions/dataTableActions.ts","api/index.ts","redux/thunks/dataTableThunks.ts","components/DataProvider/index.tsx","components/Table/index.tsx","components/Filter/index.tsx","App.tsx","index.tsx"],"names":["initialState","data","tempData","loading","rootReducer","combineReducers","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunks","Tabs","tabs","dataContent","useState","titleId","activeTab","setActiveTab","className","handler","e","_target","target","index","dataset","parseInt","find","element","paneId","_getActivePane","view","Tab","map","tab","onClick","key","data-index","classnames","active","href","title","dataApi","getData","url","a","axios","get","response","getDataAction","dataActions","getTempDataAction","setLoadingAction","tabId","filterQuery","dispatch","getState","filterLabel","length","dataItem","filter","item","trim","columnName","_sortedData","sort","b","console","log","getDataThunk","_connector","connect","useEffect","role","sortColumn","dataThunks","Table","maxRow","setMaxRow","clickedId","setClickedId","setColumnToSort","useDispatch","tableRef","useRef","_onScroll","useCallback","throttle","scrollHeight","scrollTop","clientHeight","current","removeEventListener","onscroll","addEventListener","ref","style","display","maxHeight","overflowY","clickHandler","firstItem","Object","keys","scope","data-value","cursor","replace","match","toUpperCase","_capitalizeTitle","_renderTableHead","value","_trClick","splice","values","address","city","streetAddress","zip","_renderTableBody","parentNode","filterTable","Filter","setFilterQuery","id","onChange","event","textAlign","_renderView","_tabs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65a4fb99.chunk.js","sourcesContent":["import dataActions from '../actions/dataTableActions'\nimport { ActionsType } from '../../@types/actions.types'\nimport { DataTab1, DataTab2 } from '../../@types/data.types'\n\ntype InitialStateT = {\n    data: (DataTab1 | DataTab2)[] | [],\n    tempData: (DataTab1 | DataTab2)[] | [],\n    loading: boolean\n}\n\nexport type DataActionsT = ActionsType<typeof dataActions>\n\nconst initialState: InitialStateT = {\n    data: [],\n    tempData: [],\n    loading: false\n}\n\nexport const dataReducer = (state = initialState, action: DataActionsT) => {\n    switch(action.type){\n        case 'GET_DATA': return {\n            ...state,\n            data: action.data\n        }\n        case 'GET_TEMP_DATA': return {\n            ...state,\n            tempData: action.data\n        }\n        case 'SET_LOADING': return {\n            ...state,\n            loading: action.loading\n        }\n        default: return state\n    }\n}","import {combineReducers, createStore, applyMiddleware} from 'redux'\nimport reduxThunks from 'redux-thunk'\n\nimport {dataReducer}  from './reducers/dataTableReducers';\n\nconst rootReducer = combineReducers({\n    data: dataReducer\n})\n\ntype _RootReducerT = typeof rootReducer\nexport type GlobaleStore = ReturnType<_RootReducerT>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer,  composeEnhancers(\n    applyMiddleware(reduxThunks)\n)) \n\n","import React, { useState } from 'react'\nimport {Tab} from '../index'\nimport { DataTabT, TabT } from '../../@types/tabs.types'\n\ntype _PropsTabsT = {\n    tabs: Array<TabT>,\n    dataContent: Array<DataTabT>,\n}\n\nconst _getActivePane = (dataContent: Array<DataTabT>, activeTab: number) => dataContent.find( element => element.paneId === activeTab )\n\nconst Tabs: React.FC<_PropsTabsT> = ({tabs, dataContent}) => {\n\n    const [activeTab, setActiveTab] = useState<number>(tabs[0].titleId)\n\n    const _handleTabClick = (e: any) => {\n        const _target = e.target\n        if(_target) {\n            const {index} = _target.dataset\n            setActiveTab(parseInt(index))\n        }\n    }\n\n    return(\n        <>\n            <ul className=\"nav nav-pills\">\n                <Tab tabs={tabs} activeTab={activeTab} handler={_handleTabClick}/>\n            </ul>\n            <div className='tab-content'>\n                {_getActivePane(dataContent, activeTab)?.view}\n            </div>    \n        </>\n    )\n}\n\nexport default Tabs","import React, { useState, MouseEvent} from 'react'\n\nimport classnames from 'classnames'\nimport { TabT } from '../../@types/tabs.types'\n\n\ntype _PropsTabT = {\n    tabs: Array<TabT>,\n    activeTab: number\n    handler: (event: React.MouseEvent<HTMLLIElement>) => void,\n}\n\nconst Tab: React.FC<_PropsTabT> = ({tabs, activeTab, handler}) => {\n\n    return <>\n        {\n            tabs.map( tab => {\n                return (\n                    <li onClick={handler} className=\"nav-item\" key={tab.titleId}>\n                        <a data-index={tab.titleId} className={classnames(\"nav-link\", {active: tab.titleId === activeTab})} href=\"#\">{tab.title}</a>\n                    </li>\n                )   \n            })\n        }\n    </>\n}\n\nexport default Tab","import { DataTab1, DataTab2 } from \"../../@types/data.types\"\n\nconst GET_DATA = 'GET_DATA'\nconst SET_LOADING = 'SET_LOADING'\nconst GET_TEMP_DATA = 'GET_TEMP_DATA'\n\n\nconst getDataAction = (data: Array<DataTab1 | DataTab2>) => ({type: GET_DATA, data} as const)\nconst getTempDataAction = (data: Array<DataTab1 | DataTab2>) => ({type: GET_TEMP_DATA, data} as const)\n\nconst setLoadingAction = (loading: boolean) => ({type: SET_LOADING, loading} as const)\n\n\nexport default {getDataAction, setLoadingAction, getTempDataAction}","import axios from 'axios'\n\nexport const dataApi = {\n    getData: async (url: string) => {\n        const response = await axios.get(url)\n        return response.data\n    }\n}","import { DataTab1, DataTab2 } from './../../@types/data.types';\nimport { Dispatch } from 'react'\n\nimport dataActions from '../actions/dataTableActions'\nimport {dataApi} from '../../api'\nimport { DataActionsT } from '../reducers/dataTableReducers'\nimport { GlobaleStore } from '../store';\n\nconst { getDataAction, getTempDataAction, setLoadingAction } = dataActions\n\nconst getDataThunk = (url: string) => async (dispatch: Dispatch<DataActionsT>) => {\n    dispatch(setLoadingAction(true))\n    const data: Array<DataTab1 | DataTab2> = await dataApi.getData(url)\n    if(data) {\n        dispatch(setLoadingAction(false))\n        dispatch(getDataAction(data))\n        dispatch(getTempDataAction(data))\n    }\n} \n\nconst filterTable = (tabId: number, filterQuery: string) => (dispatch: Dispatch<DataActionsT>, getState: () => GlobaleStore) => {\n    let filterLabel = tabId === 1 ? 'title' : 'email'\n    \n    const {tempData} = getState().data\n\n    if(tempData && tempData.length){\n        if(!filterQuery) {\n            dispatch(getDataAction(tempData))\n        }else {\n            const dataItem = tempData.filter( (item: any) => item[filterLabel] === filterQuery.trim() )\n            dispatch(getDataAction(dataItem ? dataItem : []))\n        }   \n    }\n}\n\nconst sortColumn = (columnName: string) => (dispatch: Dispatch<DataActionsT>, getState: () => GlobaleStore) => {\n    const {data} = getState().data\n    \n    const _sortedData = data.sort( (a:any, b:any) => {\n        if(a[columnName] < b[columnName]) return -1\n        if(a[columnName] > b[columnName]) return 1\n        return 0\n    } )\n\n    console.log(_sortedData)\n\n    dispatch(getDataAction(_sortedData))\n}\n\nexport default {getDataThunk, filterTable, sortColumn}","import React, { useEffect } from 'react'\nimport {connect, ConnectedProps} from 'react-redux'\nimport { GlobaleStore } from '../../redux/store'\n\nimport dataThunk from '../../redux/thunks/dataTableThunks'\nimport { DataTab2, DataTab1 } from '../../@types/data.types'\n\nconst {getDataThunk} = dataThunk\n\ntype DataProviderOwnProps = {\n    view: (data: (DataTab1 | DataTab2)[], tabId: number ) => React.ReactNode,\n    tabId: number,\n    url: string\n}\n\ntype DataProviderProps = ConnectedProps<typeof _connector> & DataProviderOwnProps\n\nconst _mapStateToProps = ({data}: GlobaleStore) => ({\n    data: data.data,\n    loading: data.loading\n})\n\nconst DataProvider: React.FC<DataProviderProps> = ({data, getDataThunk, view, url, loading, tabId}) => {\n\n\n    useEffect( () => {\n        getDataThunk(url)\n    }, [url])\n\n    return (\n        <>\n            {\n                loading \n                    ? <div className=\"spinner-border mt-3\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div> \n                    : (data && data.length) \n                        ? view(data, tabId)\n                        : <div className=\"jumbotron jumbotron-fluid mt-3\">\n                            <div className=\"container\">\n                            <h1 className=\"display-4\">Нет данных </h1>\n                            <p className=\"lead\">Проблема при загрузки или поиск не дал результатов</p>\n                            </div>\n                        </div>\n            }\n        </>\n    )\n}\n\nconst _connector = connect(_mapStateToProps, {getDataThunk}) \n\nexport default _connector(DataProvider)","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { DataTab2, DataAdress, DataTab1 } from '../../@types/data.types'\n\nimport throttle from 'lodash/throttle' \nimport { useDispatch } from 'react-redux'\n\nimport classnames from 'classnames'\n\nimport dataThunks from '../../redux/thunks/dataTableThunks'\n\nconst {sortColumn} = dataThunks\n\ntype _TablePropsT = {\n    data: (DataTab1 | DataTab2)[]\n}\n\nconst _capitalizeTitle = (title: string) => {\n    return title.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())\n}\n\nconst _renderTableHead = (data: DataTab1 | DataTab2 | {}, clickHandler: (event: React.MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) => {\n    const firstItem = data ? data : {}\n    const dataKeys = Object.keys(firstItem)\n\n    return dataKeys.map( (title, index) => (\n        <th \n            onClick={clickHandler} \n            scope=\"col\" \n            key={index} \n            data-value={title}\n            style={{cursor: 'pointer'}}\n        >\n            {_capitalizeTitle(title)}\n        </th>\n    ))\n\n}\n\nconst _renderTableBody = (data: (DataTab1 | DataTab2)[], maxRow: number, clickedId: number, _trClick: (e: any) => void) => {\n\n    const dataValues = [...data].splice(0, maxRow).map( (item) => Object.values(item) )\n\n    return dataValues.map( (value, index: number) => {\n        return <tr \n                onClick={_trClick} \n                className={classnames({'bg-warning': index === clickedId})} \n                data-index={index} \n                key={index}\n                style={{cursor: 'pointer'}}\n            >{\n                value.map( (item, index: number) => {\n\n                    const address = item as DataAdress \n\n                    return <td key={index}>{\n                        item instanceof Object \n                            ? `${address.city} ${address.state} ${address.streetAddress} ${address.zip}`\n                            : item\n                        }\n                    </td>\n            } )}\n        </tr>\n    } )\n}\n\n\n\nconst Table: React.FC<_TablePropsT> = ({data}) => {\n\n    const [maxRow, setMaxRow] = useState<number>(8)\n    const [clickedId, setClickedId] = useState<number>(-1)\n    const [columnToSort, setColumnToSort] = useState<string>('')\n\n    const dispatch = useDispatch()\n\n    // Сслыка на DOM-элемент таблицы\n    const tableRef = useRef<HTMLTableElement>(null)\n\n    const _debounceScroll = (e:any) => {\n        const _target = e.target\n        if(_target) {\n            const _isTableEnd = (_target.scrollHeight - _target.scrollTop) === _target.clientHeight\n\n            if(_isTableEnd) setMaxRow( maxRow => maxRow + 3 )\n        }\n    }\n\n    // Событие клика на заголовк таблицы для вызова сортировки\n    const _thClick = (e: any) => {\n        const {value} = e.target.dataset\n        dispatch(sortColumn(value))\n        setColumnToSort(value)\n    }\n\n    // Собитие клика по определенному ряду таблицы\n    const _trClick = (e: any) => {\n        const {index} = e.target.parentNode.dataset\n        setClickedId(parseInt(index))\n    }\n\n    // Используем useSelector для того, чтобы не потелять ссылку на ф-цию, когда компонент будет монтироваться и размонтироваться\n    // Оборачиваем callback в ф-цию throttle для того чтобы он выполнялся не каждый раз когда пользователь скролит,\n    // а только один раз за 50 мс. Время задержки можно изменить. Использовал throttle вместо debounce, из-за того, что debounce выполняет callback\n    // только полсле того как событие завершилось, а throttle выполняет callback один раз даже, когда событие еще выполняется\n    const _onScroll = useCallback(throttle(_debounceScroll, 50), [])\n\n    useEffect( () => {\n        if(tableRef.current && maxRow >= data.length) {\n            tableRef.current.removeEventListener('scroll', _onScroll)\n        }\n    }, [maxRow, onscroll])\n\n    // Вешаем событие скрола на таблицу и удаляем слушатель, когда компонент был демонтирован\n    useEffect( () => {\n        const {current} = tableRef\n        current?.addEventListener('scroll', _onScroll)\n\n        return () => current?.removeEventListener('scroll', _onScroll)\n    }, [onscroll])\n\n    return (\n        <table ref={tableRef} className=\"table mt-3\" style={{display: 'block', maxHeight: '90vh', overflowY: 'auto'}}>\n            <thead className='thead-dark'>\n                <tr>\n                    {_renderTableHead((data && data.length) ? data[0]: {}, _thClick)}\n                </tr>\n            </thead>\n            <tbody>\n                {_renderTableBody(data, maxRow, clickedId, _trClick)}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;\n","import React, { useState, ChangeEvent } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport dataThunks from '../../redux/thunks/dataTableThunks'\n\nconst {filterTable} = dataThunks\n\ntype _FilterPropsT = {\n    tabId: number\n}\n\nconst Filter: React.FC<_FilterPropsT> = ({tabId}) => {\n\n    const [filterQuery, setFilterQuery] = useState<string>('')\n    const dispatch = useDispatch()\n    \n    const _onChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value\n        setFilterQuery(value)\n    }\n\n    const _startFilter = () => {\n        dispatch(filterTable(tabId, filterQuery))\n    }\n\n    const _removeFilter = () => {\n        setFilterQuery('')\n        dispatch(filterTable(tabId, ''))\n    }\n\n    return (\n        <div className=\"row justify-content-between mt-3 mb-2\">\n            <div className='col-8'>\n                <input \n                    className=\"form-control\" \n                    id=\"filterInput\" \n                    type=\"text\"\n                    value={filterQuery}    \n                    onChange={_onChange}\n                />\n            </div>\n            <div className=\"col-4\" style={{textAlign: 'right'}}>\n                <button className=\"btn btn-success mr-2\" onClick={_startFilter}>Отфильтровать</button>\n                <button className=\"btn btn-danger\" onClick={_removeFilter}>Очистить</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;\n","import React from 'react';\n\nimport {Tabs, DataProvider, Table, Filter} from './components'\nimport { TabT, DataTabT } from './@types/tabs.types';\nimport { DataTab1, DataTab2 } from './@types/data.types';\n\nconst _renderView = (data: (DataTab1 | DataTab2)[], tabId: number) => {\n  // console.log(data)\n  return (\n    <>\n      <Filter tabId={tabId}/>\n      <Table data={data}/>\n    </>\n  )\n}\n\nconst _tabs: Array<TabT> = [\n  {title: 'Вкладка 1', titleId: 1},\n  {title: 'Вкладка 2', titleId: 2},\n]\n\nconst dataContent: Array<DataTabT> = [\n  {\n    paneId: 1, \n    view: <DataProvider \n            tabId={1}\n            view={_renderView} \n            url='http://www.filltext.com/?rows=300&projectId={number|1000}&title={business}&description={lorem|32}&authorId={number|1000}&phone={phone|(xxx)xxx-xx-xx}&billing={ccNumber|DISC}'\n          />\n  },\n  {\n    paneId: 2, \n    view: <DataProvider \n            tabId={2}\n            view={_renderView} \n            url='http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&adress={addressObject}&description={lorem|32}'\n          />\n  },\n\n]\n\nfunction App() {\n  return (\n    <div className=\"container mt-3\">\n      <Tabs tabs={_tabs} dataContent={dataContent}/>        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}