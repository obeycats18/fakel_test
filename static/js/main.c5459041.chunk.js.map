{"version":3,"sources":["redux/reducers/dataTableReducers.ts","redux/store.ts","components/Tabs/index.tsx","components/Tab/index.tsx","redux/actions/dataTableActions.ts","api/index.ts","redux/thunks/dataTableThunks.ts","components/DataProvider/index.tsx","components/Table/index.tsx","components/Filter/index.tsx","components/Paginator/index.tsx","App.tsx","index.tsx"],"names":["initialState","data","tempData","loading","rootReducer","combineReducers","state","action","type","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","reduxThunks","Tabs","tabs","dataContent","useState","titleId","activeTab","setActiveTab","className","handler","e","_target","target","index","dataset","parseInt","find","element","paneId","_getActivePane","view","Tab","map","tab","onClick","key","data-index","classnames","active","href","title","dataApi","getData","url","a","axios","get","response","getDataAction","dataActions","getTempDataAction","setLoadingAction","tabId","filterQuery","dispatch","getState","filterLabel","length","dataItem","filter","item","trim","columnName","_sortedData","sort","b","Object","city","currentPage","pageLimit","partData","splice","getDataThunk","_connector","connect","tablePagination","useEffect","role","sortColumn","dataThunks","Table","withPagination","maxRow","setMaxRow","clickedId","setClickedId","setColumnToSort","useDispatch","tableRef","useRef","_onScroll","useCallback","throttle","scrollHeight","scrollTop","clientHeight","current","removeEventListener","onscroll","addEventListener","ref","style","display","maxHeight","overflowY","clickHandler","firstItem","keys","scope","data-value","cursor","replace","match","toUpperCase","_capitalizeTitle","_renderTableHead","value","_trClick","values","address","streetAddress","zip","_renderTableBody","parentNode","filterTable","Filter","setFilterQuery","id","onChange","event","textAlign","getDataFromPage","Paginator","recordsCount","useSelector","setCurrentPage","_pageCount","Math","ceil","aria-label","handlePageClick","_pageItem","i","push","_renderPageItem","li","_renderView","_tabs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5459041.chunk.js","sourcesContent":["import dataActions from '../actions/dataTableActions'\nimport { ActionsType } from '../../@types/actions.types'\nimport { DataTab1, DataTab2 } from '../../@types/data.types'\n\ntype InitialStateT = {\n    data: (DataTab1 | DataTab2)[] | [],\n    tempData: (DataTab1 | DataTab2)[] | [],\n    loading: boolean\n}\n\nexport type DataActionsT = ActionsType<typeof dataActions>\n\nconst initialState: InitialStateT = {\n    data: [],\n    tempData: [],\n    loading: false\n}\n\nexport const dataReducer = (state = initialState, action: DataActionsT) => {\n    switch(action.type){\n        case 'GET_DATA': return {\n            ...state,\n            data: action.data\n        }\n        case 'GET_TEMP_DATA': return {\n            ...state,\n            tempData: action.data\n        }\n        case 'SET_LOADING': return {\n            ...state,\n            loading: action.loading\n        }\n        default: return state\n    }\n}","import {combineReducers, createStore, applyMiddleware} from 'redux'\nimport reduxThunks from 'redux-thunk'\n\nimport {dataReducer}  from './reducers/dataTableReducers';\n\nconst rootReducer = combineReducers({\n    data: dataReducer\n})\n\ntype _RootReducerT = typeof rootReducer\nexport type GlobaleStore = ReturnType<_RootReducerT>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(rootReducer,  composeEnhancers(\n    applyMiddleware(reduxThunks)\n)) \n\n","import React, { useState } from 'react'\nimport {Tab} from '../index'\nimport { DataTabT, TabT } from '../../@types/tabs.types'\n\ntype _PropsTabsT = {\n    tabs: Array<TabT>,\n    dataContent: Array<DataTabT>,\n}\n\nconst _getActivePane = (dataContent: Array<DataTabT>, activeTab: number) => dataContent.find( element => element.paneId === activeTab )\n\nconst Tabs: React.FC<_PropsTabsT> = ({tabs, dataContent}) => {\n\n    const [activeTab, setActiveTab] = useState<number>(tabs[0].titleId)\n\n    const _handleTabClick = (e: any) => {\n        const _target = e.target\n        if(_target) {\n            const {index} = _target.dataset\n            setActiveTab(parseInt(index))\n        }\n    }\n\n    return(\n        <>\n            <ul className=\"nav nav-pills\">\n                <Tab tabs={tabs} activeTab={activeTab} handler={_handleTabClick}/>\n            </ul>\n            <div className='tab-content'>\n                {_getActivePane(dataContent, activeTab)?.view}\n            </div>    \n        </>\n    )\n}\n\nexport default Tabs","import React from 'react'\n\nimport classnames from 'classnames'\nimport { TabT } from '../../@types/tabs.types'\n\n\ntype _PropsTabT = {\n    tabs: Array<TabT>,\n    activeTab: number\n    handler: (event: React.MouseEvent<HTMLLIElement>) => void,\n}\n\nconst Tab: React.FC<_PropsTabT> = ({tabs, activeTab, handler}) => {\n\n    return <>\n        {\n            tabs.map( tab => {\n                return (\n                    <li onClick={handler} className=\"nav-item\" key={tab.titleId}>\n                        <a data-index={tab.titleId} className={classnames(\"nav-link\", {active: tab.titleId === activeTab})} href=\"#\">{tab.title}</a>\n                    </li>\n                )   \n            })\n        }\n    </>\n}\n\nexport default Tab","import { DataTab1, DataTab2 } from \"../../@types/data.types\"\n\nconst GET_DATA = 'GET_DATA'\nconst SET_LOADING = 'SET_LOADING'\nconst GET_TEMP_DATA = 'GET_TEMP_DATA'\n\n\nconst getDataAction = (data: Array<DataTab1 | DataTab2>) => ({type: GET_DATA, data} as const)\nconst getTempDataAction = (data: Array<DataTab1 | DataTab2>) => ({type: GET_TEMP_DATA, data} as const)\n\nconst setLoadingAction = (loading: boolean) => ({type: SET_LOADING, loading} as const)\n\n\nexport default {getDataAction, setLoadingAction, getTempDataAction}","import axios from 'axios'\n\nexport const dataApi = {\n    getData: async (url: string) => {\n        const response = await axios.get(url)\n        return response.data\n    }\n}","import { DataTab1, DataTab2 } from './../../@types/data.types';\nimport { Dispatch } from 'react'\n\nimport dataActions from '../actions/dataTableActions'\nimport {dataApi} from '../../api'\nimport { DataActionsT } from '../reducers/dataTableReducers'\nimport { GlobaleStore } from '../store';\n\nconst { getDataAction, getTempDataAction, setLoadingAction } = dataActions\n\nconst getDataThunk = (url: string) => async (dispatch: Dispatch<DataActionsT>) => {\n    dispatch(setLoadingAction(true))\n    const data: Array<DataTab1 | DataTab2> = await dataApi.getData(url)\n    if(data) {\n        dispatch(setLoadingAction(false))\n        dispatch(getDataAction(data))\n        dispatch(getTempDataAction(data))\n    }\n} \n\nconst filterTable = (tabId: number, filterQuery: string) => (dispatch: Dispatch<DataActionsT>, getState: () => GlobaleStore) => {\n    let filterLabel = tabId === 1 ? 'title' : 'email'\n    \n    const {tempData} = getState().data\n\n    if(tempData && tempData.length){\n        if(!filterQuery) {\n            dispatch(getDataAction(tempData))\n        }else {\n            const dataItem = tempData.filter( (item: any) => item[filterLabel] === filterQuery.trim() )\n            dispatch(getDataAction(dataItem ? dataItem : []))\n        }   \n    }\n}\n\nconst sortColumn = (columnName: string) => (dispatch: Dispatch<DataActionsT>, getState: () => GlobaleStore) => {\n    const {data} = getState().data\n    \n    const _sortedData = data.sort( (a:any, b:any) => {\n\n        if((a[columnName] instanceof Object) && (b[columnName] instanceof Object)){\n            if(a[columnName].city < b[columnName].city) return -1\n            if(a[columnName].city > b[columnName].city) return 1\n            return 0\n        }\n\n        if(a[columnName] < b[columnName]) return -1\n        if(a[columnName] > b[columnName]) return 1\n        return 0\n    } )\n\n    dispatch(getDataAction(_sortedData))\n}\n\nconst getDataFromPage = (currentPage: number, pageLimit: number) => (dispatch: Dispatch<DataActionsT>, getState: () => GlobaleStore) => {\n    if(currentPage && pageLimit) {\n        const {tempData} = getState().data\n        if(tempData) {\n            let partData = [...tempData]\n            partData = partData.splice((currentPage - 1) + ((currentPage === 1) ? 0 : pageLimit), pageLimit)\n\n            dispatch(getDataAction(partData))\n        }\n    }\n}\n\nexport default {getDataThunk, filterTable, sortColumn, getDataFromPage}","import React, { useEffect } from 'react'\nimport {connect, ConnectedProps} from 'react-redux'\nimport { GlobaleStore } from '../../redux/store'\n\nimport dataThunk from '../../redux/thunks/dataTableThunks'\nimport { DataTab2, DataTab1 } from '../../@types/data.types'\n\nconst {getDataThunk} = dataThunk\n\ntype DataProviderOwnProps = {\n    view: (data: (DataTab1 | DataTab2)[], tabId: number, withPagination: boolean ) => React.ReactNode,\n    tabId: number,\n    url: string,\n    tablePagination?: boolean\n}\n\ntype DataProviderProps = ConnectedProps<typeof _connector> & DataProviderOwnProps\n\nconst _mapStateToProps = ({data}: GlobaleStore) => ({\n    data: data.data,\n    loading: data.loading\n})\n\nconst DataProvider: React.FC<DataProviderProps> = ({data, getDataThunk, view, url, loading, tabId, tablePagination = false}) => {\n\n    // Получение данных для таблицы с определенного url\n    useEffect( () => {\n        getDataThunk(url)\n    }, [url])\n\n\n    // Вызов функции view, переданную в пропсах, которая рендерит компонент, описанный в этой фунции\n    return (\n        <>\n            {\n                (loading) \n                    ? <div className=\"spinner-border mt-3\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div> \n                    : (data && data.length) \n                        ? view(data, tabId, tablePagination)\n                        : <div className=\"jumbotron jumbotron-fluid mt-3\">\n                            <div className=\"container\">\n                            <h1 className=\"display-4\">Нет данных </h1>\n                            <p className=\"lead\">Проблема при загрузки или поиск не дал результатов</p>\n                            </div>\n                        </div>\n            }\n        </>\n    )\n}\n\nconst _connector = connect(_mapStateToProps, {getDataThunk}) \n\nexport default _connector(DataProvider)","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport { DataTab2, DataAdress, DataTab1 } from '../../@types/data.types'\n\nimport throttle from 'lodash/throttle' \nimport { useDispatch } from 'react-redux'\n\nimport classnames from 'classnames'\n\nimport dataThunks from '../../redux/thunks/dataTableThunks'\n\nconst {sortColumn} = dataThunks\n\ntype _TablePropsT = {\n    data: (DataTab1 | DataTab2)[],\n    withPagination?: boolean\n}\n\nconst _capitalizeTitle = (title: string) => {\n    return title.replace(/(?:^|\\s|[\"'([{])+\\S/g, match => match.toUpperCase())\n}\n\nconst _renderTableHead = (data: DataTab1 | DataTab2 | {}, clickHandler: (event: React.MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) => {\n    const firstItem = data ? data : {}\n    const dataKeys = Object.keys(firstItem)\n\n    return dataKeys.map( (title, index) => (\n        <th \n            onClick={clickHandler} \n            scope=\"col\" \n            key={index} \n            data-value={title}\n            style={{cursor: 'pointer'}}\n        >\n            {_capitalizeTitle(title)}\n        </th>\n    ))\n\n}\n\nconst _renderTableBody = (data: (DataTab1 | DataTab2)[], maxRow: number, clickedId: number, _trClick: (e: any) => void) => {\n\n    const dataValues = [...data].splice(0, maxRow).map( (item) => Object.values(item) )\n\n    return dataValues.map( (value, index: number) => {\n        return <tr \n                onClick={_trClick} \n                className={classnames({'bg-warning': index === clickedId})} \n                data-index={index} \n                key={index}\n                style={{cursor: 'pointer'}}\n            >{\n                value.map( (item, index: number) => {\n\n                    const address = item as DataAdress \n\n                    return <td key={index}>{\n                        item instanceof Object \n                            ? `${address.city} ${address.state} ${address.streetAddress} ${address.zip}`\n                            : item\n                        }\n                    </td>\n            } )}\n        </tr>\n    } )\n}\n\n\n\nconst Table: React.FC<_TablePropsT> = ({data, withPagination = false}) => {\n\n    const [maxRow, setMaxRow] = useState<number>(8)\n    const [clickedId, setClickedId] = useState<number>(-1)\n    const [columnToSort, setColumnToSort] = useState<string>('')\n\n    const dispatch = useDispatch()\n\n    // Сслыка на DOM-элемент таблицы\n    const tableRef = useRef<HTMLTableElement>(null)\n\n    const _debounceScroll = (e:any) => {\n        const _target = e.target\n        if(_target) {\n            const _isTableEnd = (_target.scrollHeight - _target.scrollTop) === _target.clientHeight\n\n            if(_isTableEnd) setMaxRow( maxRow => maxRow + 3 )\n        }\n    }\n\n    // Событие клика на заголовк таблицы для вызова сортировки\n    const _thClick = (e: any) => {\n        const {value} = e.target.dataset\n        dispatch(sortColumn(value))\n        setColumnToSort(value)\n    }\n\n    // Собитие клика по определенному ряду таблицы\n    const _trClick = (e: any) => {\n        const {index} = e.target.parentNode.dataset\n        setClickedId(parseInt(index))\n    }\n\n    // Используем useSelector для того, чтобы не потелять ссылку на ф-цию, когда компонент будет монтироваться и размонтироваться\n    // Оборачиваем callback в ф-цию throttle для того чтобы он выполнялся не каждый раз когда пользователь скролит,\n    // а только один раз за 50 мс. Время задержки можно изменить. Использовал throttle вместо debounce, из-за того, что debounce выполняет callback\n    // только полсле того как событие завершилось, а throttle выполняет callback один раз даже, когда событие еще выполняется\n    const _onScroll = useCallback(throttle(_debounceScroll, 50), [])\n\n    useEffect( () => {\n        if(tableRef.current && maxRow >= data.length) {\n            tableRef.current.removeEventListener('scroll', _onScroll)\n        }\n    }, [maxRow, onscroll])\n\n    // Вешаем событие скрола на таблицу и удаляем слушатель, когда компонент был демонтирован\n    useEffect( () => {\n        const {current} = tableRef\n        if(!withPagination) {\n            current?.addEventListener('scroll', _onScroll)\n        }\n\n        return () => current?.removeEventListener('scroll', _onScroll)\n    }, [onscroll])\n\n    return (\n        <table ref={tableRef} className=\"table mt-3\" style={{display: 'block', maxHeight: '80vh', overflowY: 'auto'}}>\n            <thead className='thead-dark'>\n                <tr>\n                    {_renderTableHead((data && data.length) ? data[0]: {}, _thClick)}\n                </tr>\n            </thead>\n            <tbody>\n                {_renderTableBody(data, maxRow, clickedId, _trClick)}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;\n","import React, { useState, ChangeEvent } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport dataThunks from '../../redux/thunks/dataTableThunks'\n\nconst {filterTable} = dataThunks\n\ntype _FilterPropsT = {\n    tabId: number\n}\n\nconst Filter: React.FC<_FilterPropsT> = ({tabId}) => {\n\n    const [filterQuery, setFilterQuery] = useState<string>('')\n    const dispatch = useDispatch()\n    \n    const _onChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value\n        setFilterQuery(value)\n    }\n\n    const _startFilter = () => {\n        dispatch(filterTable(tabId, filterQuery))\n    }\n\n    const _removeFilter = () => {\n        setFilterQuery('')\n        dispatch(filterTable(tabId, ''))\n    }\n\n    return (\n        <div className=\"row justify-content-between mt-3 mb-2\">\n            <div className='col-8'>\n                <input \n                    className=\"form-control\" \n                    id=\"filterInput\" \n                    type=\"text\"\n                    value={filterQuery}    \n                    onChange={_onChange}\n                />\n            </div>\n            <div className=\"col-4\" style={{textAlign: 'right'}}>\n                <button className=\"btn btn-success mr-2\" onClick={_startFilter}>Отфильтровать</button>\n                <button className=\"btn btn-danger\" onClick={_removeFilter}>Очистить</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react'\n\nimport classnames from 'classnames'\n\nimport dataThunks from '../../redux/thunks/dataTableThunks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GlobaleStore } from '../../redux/store'\n\nconst {getDataFromPage} = dataThunks\n\ntype _PaginatorPropsT = {\n    pageLimit?: number\n}\n\nconst _renderPageItem = (_pageCount: number, currentPage: number, handlePageClick:(event: React.MouseEvent<HTMLLIElement, MouseEvent>) => void) => {\n\n    const _pageItem = []\n\n    for(let i = 1; i <= _pageCount; i++ ){\n        _pageItem.push( <li key={i} onClick={handlePageClick} data-index={i} className={classnames(\"page-item\", {active: i === currentPage})}><a className=\"page-link\" href=\"#\">{i}</a></li> )\n    }\n\n    return _pageItem\n}\n\nconst Paginator: React.FC<_PaginatorPropsT> = ({pageLimit = 8}) => {\n\n    // Общее кол-во записей\n    const recordsCount = useSelector( (state: GlobaleStore) => state.data.tempData.length )\n    \n    // Текущая страница\n    const [currentPage, setCurrentPage] = useState<number>(1)\n    const dispatch = useDispatch()\n\n    // useEffect(() => {\n    //     dispatch(getDataFromPage(currentPage, pageLimit))\n    // }, [currentPage, pageLimit]);\n\n    // Вычисление кол-ва страниц - общее кол-во записей / максимальное кол-во записей на одной странице\n    const _pageCount = Math.ceil(recordsCount / pageLimit)\n\n    const handlePageClick = (e: any) => {\n        if(e.target) {\n            const li = e.target.parentNode\n            if(li) {\n                const {index} = li.dataset\n                dispatch(getDataFromPage(index, pageLimit))\n                setCurrentPage(parseInt(index))\n            }\n        }\n    }\n\n    return (\n        <nav aria-label=\"pagination-table\">\n            <ul className=\"pagination\">\n                {_renderPageItem(_pageCount, currentPage, handlePageClick)}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Paginator;\n","import React from 'react';\n\nimport {Tabs, DataProvider, Table, Filter, Paginator} from './components'\nimport { TabT, DataTabT } from './@types/tabs.types';\nimport { DataTab1, DataTab2 } from './@types/data.types';\n\nconst _renderView = (data: (DataTab1 | DataTab2)[], tabId: number, withPagination: boolean) => {\n  return (\n    <>\n      <Filter tabId={tabId}/>\n      {withPagination && <Paginator/>}\n      <Table data={data} withPagination={withPagination}/>\n    </>\n  )\n}\n\nconst _tabs: Array<TabT> = [\n  {title: 'Вкладка 1 (оптимизированный скролл)', titleId: 1},\n  {title: 'Вкладка 2 (с пагинацией)', titleId: 2},\n]\n\nconst dataContent: Array<DataTabT> = [\n  {\n    paneId: 1, \n    view: <DataProvider \n            tabId={1}\n            view={_renderView} \n            url='http://www.filltext.com/?rows=300&projectId={number|1000}&title={business}&description={lorem|32}&authorId={number|1000}&phone={phone|(xxx)xxx-xx-xx}&billing={ccNumber|DISC}'\n          />\n  },\n  {\n    paneId: 2, \n    view: <DataProvider \n            tablePagination\n            tabId={2}\n            view={_renderView} \n            url='http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&adress={addressObject}&description={lorem|32}'\n          />\n  },\n\n]\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container mt-3\">\n      <Tabs tabs={_tabs} dataContent={dataContent}/>        \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}